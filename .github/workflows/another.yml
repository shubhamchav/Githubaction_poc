name: Another Workflow

on:
  push:
    branches:
      - master

jobs:
  set-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment
        run: echo "Setting environment"
    
  prerequisite:
    runs-on: ubuntu-latest
    needs: set-environment
    steps:
      - name: Prerequisite step
        run: echo "Running prerequisite"

  get-computer-name:
    runs-on: ubuntu-latest
    needs: prerequisite
    steps:
      - name: Get computer name
        run: |
             echo "Computer name"
             false

  copy-from-s3:
    runs-on: windows-latest
    needs: get-computer-name
    steps:
      - name: Copy from S3
        run: |
          echo "Copying from S3"
         #false  

  rollback_to_previous:
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3]
    if: ${{ always() && (needs.set-environment.result == 'failure' || needs.prerequisite.result == 'failure' || needs.get-computer-name.result == 'failure' || needs.copy-from-s3.result == 'failure') }}
    uses: shubhamchav/Githubaction_POC_rollback/.github/workflows/base.yml@master
    with:
      VERSION: ${{ github.run_number }}
      ENVIRONMENT: 'production'

  slack-notification-success:
    runs-on: ubuntu-latest
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3, rollback_to_previous]
    if: ${{ always() && (needs.set-environment.result == 'success' || needs.prerequisite.result == 'success' || needs.get-computer-name.result == 'success' || needs.copy-from-s3.result == 'success' || needs.rollback_to_previous.result != 'failure' || needs.rollback_to_previous.result != 'cancelled') }}
    steps:
      - name: Success Notification
        run: echo "Workflow completed successfully"

  slack-notification-failure:
    runs-on: ubuntu-latest
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3, rollback_to_previous]
    if: ${{ (needs.set-environment.result == 'failure' || needs.prerequisite.result == 'failure' || needs.get-computer-name.result == 'failure' || needs.copy-from-s3.result == 'failure' || needs.rollback_to_previous.result == 'failure') }}
    steps:
      - name: Failure Notification
        run: echo "Workflow failed"
